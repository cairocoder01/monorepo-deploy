name: Plugin Release

on:
  push:
    branches:
      - 'main'
    paths:
      - 'extensions/**/*'

permissions:
  contents: read

jobs:
  # https://github.com/tj-actions/changed-files/blob/main/.github/workflows/matrix-example.yml
  changed-files:
    name: Get all changed extensions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_files }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all changed xml files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          matrix: true
          files: |
            extensions/**/updates.xml

      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

#      - name: Define Extensions
#        id: extensions
#        run: |
#          IFS='|' read -r -a extensions <<< "${ALL_CHANGED_FILES}"
#          echo 'colors=${extensions[@]}' >> "$GITHUB_OUTPUT"

  build:
    name: Package Extension
    runs-on: ubuntu-latest
    needs: [changed-files]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Echo files
        run: |
          echo ${{ matrix.files }}

      - name: Get Plugin Name
        run: |
          echo `expr "${{ matrix.files }}" : '.*\/\(.*\)\/updates.xml'`
          echo "PLUGIN=`expr "${{ matrix.files }}" : '.*\/\(.*\)\/updates.xml'`" >> $GITHUB_ENV


      - name: Get Version
        id: getversion
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: ${{ matrix.files }}
          xpath: '//update[1]/version/text()'

      - name: Get Plugin Name
        id: getplugin
        uses: mavrosxristoforos/get-xml-info@1.0
        with:
          xml-file: ${{ matrix.files }}
          xpath: '//update[1]/element/text()'

      - name: Echo plugin
        run: |
          echo $PLUGIN
          echo ${{ steps.getversion.outputs.info }}
          echo ${{ steps.getplugin.outputs.info }}

    # - name: Run test suite
    #   run: composer run-script test
