name: Extension Release

on:
  push:
    branches:
      - 'main'
    paths:
      - 'extensions/**/updates.xml'

permissions:
  contents: write

jobs:
  # https://github.com/tj-actions/changed-files/blob/main/.github/workflows/matrix-example.yml
  changed-files:
    name: Get all changed extensions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_files }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get all changed xml files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          matrix: true
          files: |
            extensions/**/updates.xml

      - name: List all changed files
        run: echo '${{ steps.changed-files.outputs.all_changed_files }}'

#      - name: Define Extensions
#        id: extensions
#        run: |
#          IFS='|' read -r -a extensions <<< "${ALL_CHANGED_FILES}"
#          echo 'colors=${extensions[@]}' >> "$GITHUB_OUTPUT"

  build:
    name: Package Extension
    runs-on: ubuntu-latest
    needs: [changed-files]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Echo files
        run: |
          echo ${{ matrix.files }}

      - name: Get Plugin Path
        run: |
          echo "PLUGIN_PATH=`expr "${{ matrix.files }}" : '\(.*\)\/updates.xml'`" >> $GITHUB_ENV

      - name: Get Version
        id: getversion
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: ${{ matrix.files }}
          xpath: '//update[1]/version'

      - name: Get Plugin Element
        id: getplugin
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: ${{ matrix.files }}
          xpath: '//update[1]/element'

      - name: Get Plugin Name
        id: getpluginname
        uses: mavrosxristoforos/get-xml-info@2.0
        with:
          xml-file: ${{ matrix.files }}
          xpath: '//update[1]/name'

      - name: Generate Package Name
        run: |
          echo $PLUGIN
          echo ${{ steps.getversion.outputs.info }}
          echo ${{ steps.getplugin.outputs.info }}
          echo "PACKAGE_NAME=`expr "${{ steps.getplugin.outputs.info }}-${{ steps.getversion.outputs.info }}.zip"`" >> $GITHUB_ENV

      - name: Build Extension ZIP
        run: |
          zip -r $PACKAGE_NAME $PLUGIN_PATH -x "$PLUGIN_PATH/updates.xml"

      - name: Bump version and push tag
        id: tag
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          tag_prefix: ${{ steps.getplugin.outputs.info }}/
          custom_tag: ${{ steps.getversion.outputs.info }}


      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.new_tag }}
          release_name: ${{ steps.getpluginname.outputs.info }} ${{ steps.getversion.outputs.info }} (${{ steps.getplugin.outputs.info }})
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $PACKAGE_NAME
          asset_name: $PACKAGE_NAME
          asset_content_type: application/zip

    # - name: Run test suite
    #   run: composer run-script test
